version: '3.3'
services:
  rabbitmq:
    image: rabbitmq
    build:
      context: ./infrastructure/images/rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_HOME=./infrastructure/data/rabbitmq
      - RABBITMQ_DEFAULT_USER=english
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./infrastructure/data/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    logging:
      driver: none
    networks:
      - backend

  backend:
    image: engishapp.api
    build:
      context: .
      dockerfile: EnglishApplication.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      - rabbitmq
      - database
    networks:
      - backend
    restart: always
    ports:
      - "80:8080"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M
  
  database:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: 'english'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'english'
    networks:
      - backend
    ports:
      - "50000:5432"
    volumes:
      - ./infrastructure/data/postgresql:/var/lib/postgresql/data

networks:
  backend:
    driver: bridge